body {
  font-family: 'Barlow', sans-serif;
  --bege: #E6E0D6;
  --marrom-escuro: #816D4F;
  --marrom-claro: #B29463;
}

input[type=checkbox] {
  border: 2px solid var(--marrom-claro);
  box-shadow: none;
}

input[type=checkbox]:checked,
input[type="checkbox"]:focus {
  background-color: var(--marrom-claro);
  border-color: var(--marrom-claro);
  box-shadow: none;
  outline: none;
}

.banner-1 {
  background-image: url(./assets/banner-1.png);
}

.banner-2 {
  background-image: url(./assets/banner-2.png);
}

.banner-3 {
  background-image: url(./assets/banner-3.png);
}

.banners {
  width: 100%;
  height: 100vh;
  background-repeat: no-repeat;
  background-size: cover;
  background-position: center;
  /* parallax */
  background-attachment: fixed;
}

.banners-titulo {
  /* variavel do bootstrap para deixar a faixa translucida*/
  --bs-bg-opacity: .2;
}

.botao-padrao {
  color: black;
  background-color: var(--marrom-claro);
}

.botao-padrao:hover {
  background-color: var(--marrom-escuro);
}

.input-range::-webkit-slider-thumb {
  background-color: var(--marrom-claro);
}

footer {
  background-color: var(--marrom-claro);
}

/* aqui tem o trabalho de formiguinha para inspecionar cada 
elemento da página que não está de acordo com o projeto 
pega cada variável e cada classe para fazer o modificação */

/* Essa sintaxe se chama nesting,
e é muito característica do Sass,
uma linguagem de estilo baseada no CSS. O CSS agora aceita a sintaxe de nesting,
** que consiste em atribuir valores de uma variável a outra variável**,
que no caso é a data-bs-theme no valor dark. Dessa forma,
conseguimos aplicar o estilo correto em toda a página.  */

[data-bs-theme="dark"] {
  color: white;
  .nav-link,
  .card-body,
  .offcanvas,
  .accordion,
  .btn {
    --bs-nav-link-color: white;
    --bs-card-color: white;
    --bs-offcanvas-color: white;
    --bs-body-color: white;
    --bs-body-color: white;
  }
}